"use strict";
var helpers = require("../../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }
    return _typeof(obj);
  }
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require("react"));
  var _timer = require("./lib/timer");
  var _s2 = $RefreshSig$();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };
    return cache;
  }
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || (/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/).test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !((Symbol.iterator in Object(arr)))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
  var THIRTY_SECONDS_STR = 'THIRTY_SECONDS';
  var FIVE_MINUTES_STR = 'FIVE_MINUTES';
  var TEN_MINUTES_STR = 'TEN_MINUTES';
  var TWENTY_FIVE_MINUTES_STR = 'TWENTY_FIVE_MINUTES';
  var THIRTY_SECONDS = 30;
  var FIVE_MINUTES = 5 * 60;
  var TEN_MINUTES = FIVE_MINUTES * 2;
  var TWENTY_FIVE_MINUTES = FIVE_MINUTES * 5;
  var TIMER_MAP = {
    THIRTY_SECONDS: THIRTY_SECONDS,
    FIVE_MINUTES: FIVE_MINUTES,
    TEN_MINUTES: TEN_MINUTES,
    TWENTY_FIVE_MINUTES: TWENTY_FIVE_MINUTES,
    custom: null
  };
  var TimerHeader = function TimerHeader() {
    return (
      /*#__PURE__*/_react["default"].createElement("section", {
        className: "row mt-4"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "col"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "d-flex flex-column p-2 "
      }, /*#__PURE__*/_react["default"].createElement("h1", null, "Timer"), /*#__PURE__*/_react["default"].createElement("p", null, "The ", /*#__PURE__*/_react["default"].createElement("i", null, "Timer"), " utility contains a settable timer. Set a time and walk away, when the ", /*#__PURE__*/_react["default"].createElement("i", null, "timer"), "  finishes it will beep and flash to let you know. "))))
    );
  };
  _c = TimerHeader;
  var TimerSelectorButton = function TimerSelectorButton(_ref) {
    var resetTimer = _ref.resetTimer, timerDurationValue = _ref.timerDurationValue, timerDurationDisplay = _ref.timerDurationDisplay;
    return (
      /*#__PURE__*/_react["default"].createElement("button", {
        className: "btn btn-outline-dark mx-2 mt-2 px-5 ",
        onClick: resetTimer,
        value: timerDurationValue
      }, timerDurationDisplay)
    );
  };
  _c2 = TimerSelectorButton;
  var TimerSelectorButtons = function TimerSelectorButtons(_ref2) {
    var timerIdentifiers = _ref2.timerIdentifiers, resetTimer = _ref2.resetTimer;
    var timerButtons = timerIdentifiers.map(function (timerIdentifier, i) {
      return (
        /*#__PURE__*/_react["default"].createElement(TimerSelectorButton, {
          key: i,
          resetTimer: resetTimer,
          timerDurationValue: timerIdentifier.timerDurationValue,
          timerDurationDisplay: timerIdentifier.timerDurationDisplay
        })
      );
    });
    return (
      /*#__PURE__*/_react["default"].createElement("div", null, timerButtons)
    );
  };
  _c3 = TimerSelectorButtons;
  var TimerSelectorSection = function TimerSelectorSection(_ref3) {
    var resetTimer = _ref3.resetTimer;
    var timerIdentifiers = [{
      timerDurationValue: THIRTY_SECONDS_STR,
      timerDurationDisplay: '00:30'
    }, {
      timerDurationValue: FIVE_MINUTES_STR,
      timerDurationDisplay: '05:00'
    }, {
      timerDurationValue: TEN_MINUTES_STR,
      timerDurationDisplay: '10:00'
    }, {
      timerDurationValue: TWENTY_FIVE_MINUTES_STR,
      timerDurationDisplay: '25:00'
    }];
    return (
      /*#__PURE__*/_react["default"].createElement("div", {
        className: "text-center"
      }, /*#__PURE__*/_react["default"].createElement(TimerSelectorButtons, {
        resetTimer: resetTimer,
        timerIdentifiers: timerIdentifiers
      }))
    );
  };
  _c4 = TimerSelectorSection;
  var TimerDisplay = function TimerDisplay(_ref4) {
    var timeRemaining = _ref4.timeRemaining, timerComplete = _ref4.timerComplete;
    var blinkClass = timerComplete ? 'timer-blinking' : '';
    var displayTime = (0, _timer.translateFromSeconds)(timeRemaining);
    return (
      /*#__PURE__*/_react["default"].createElement("div", {
        className: "text-center"
      }, /*#__PURE__*/_react["default"].createElement("h2", {
        className: ("display-1 display-large ").concat(blinkClass)
      }, displayTime))
    );
  };
  _c5 = TimerDisplay;
  var TimerManager = function TimerManager(_ref5) {
    var isRunning = _ref5.isRunning, timerComplete = _ref5.timerComplete, toggleTimer = _ref5.toggleTimer, selectedTimer = _ref5.selectedTimer, resetTimer = _ref5.resetTimer;
    var buttonText = isRunning ? 'STOP' : 'START';
    var colorClass = isRunning ? 'warning' : 'success';
    return (
      /*#__PURE__*/_react["default"].createElement("div", {
        className: "text-center"
      }, /*#__PURE__*/_react["default"].createElement("button", {
        disabled: timerComplete,
        className: ("btn btn-lg btn-").concat(colorClass, " me-2 mb-3 px-5"),
        onClick: toggleTimer,
        value: "toggle"
      }, buttonText), /*#__PURE__*/_react["default"].createElement("button", {
        className: "btn btn-lg btn-danger me-2 mb-3 px-5",
        onClick: resetTimer,
        value: selectedTimer
      }, "RESET"))
    );
  };
  _c6 = TimerManager;
  var TimerBody = function TimerBody(_ref6) {
    var timeRemaining = _ref6.timeRemaining, setTimeRemaining = _ref6.setTimeRemaining, isRunning = _ref6.isRunning, selectedTimer = _ref6.selectedTimer, toggleTimer = _ref6.toggleTimer, resetTimer = _ref6.resetTimer, timerComplete = _ref6.timerComplete;
    return (
      /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("section", {
        className: "row my-4"
      }, /*#__PURE__*/_react["default"].createElement(TimerSelectorSection, {
        resetTimer: resetTimer
      })), /*#__PURE__*/_react["default"].createElement("section", {
        className: "row mt-4"
      }, /*#__PURE__*/_react["default"].createElement(TimerDisplay, {
        timeRemaining: timeRemaining,
        isRunning: isRunning,
        setTimeRemaining: setTimeRemaining,
        timerComplete: timerComplete
      })), /*#__PURE__*/_react["default"].createElement("section", {
        className: "row mt-4"
      }, /*#__PURE__*/_react["default"].createElement(TimerManager, {
        timerComplete: timerComplete,
        isRunning: isRunning,
        selectedTimer: selectedTimer,
        toggleTimer: toggleTimer,
        resetTimer: resetTimer
      })))
    );
  };
  _c7 = TimerBody;
  function Timer() {
    _s2();
    var defaultTitle = 'Utilities For Me';
    var _useState = (0, _react.useState)(false), _useState2 = _slicedToArray(_useState, 2), isRunning = _useState2[0], setIsRunning = _useState2[1];
    var _useState3 = (0, _react.useState)(TWENTY_FIVE_MINUTES_STR), _useState4 = _slicedToArray(_useState3, 2), selectedTimer = _useState4[0], setSelectedTimer = _useState4[1];
    var _useState5 = (0, _react.useState)(TWENTY_FIVE_MINUTES), _useState6 = _slicedToArray(_useState5, 2), timeRemaining = _useState6[0], setTimeRemaining = _useState6[1];
    var _useState7 = (0, _react.useState)(false), _useState8 = _slicedToArray(_useState7, 2), timerComplete = _useState8[0], setTimerComplete = _useState8[1];
    var _useState9 = (0, _react.useState)(false), _useState10 = _slicedToArray(_useState9, 2), alarmPlaying = _useState10[0], setAlarmPlaying = _useState10[1];
    var audio = (0, _react.useRef)(new window.Audio(("").concat(window.staticRoot, "/static/sounds/alarm-clock.mp3")));
    var finishTimer = function finishTimer() {
      setIsRunning(false);
      setTimerComplete(true);
      setAlarmPlaying(true);
    };
    var tick = function tick() {
      if (isRunning) {
        if (timeRemaining >= 1) {
          setTimeRemaining(timeRemaining - 1);
        } else {
          finishTimer();
        }
      }
    };
    var toggleTimer = function toggleTimer() {
      return setIsRunning(!isRunning);
    };
    var resetTimer = function resetTimer(e) {
      var desiredTimer = e.target.value;
      setAlarmPlaying(false);
      setSelectedTimer(desiredTimer);
      setIsRunning(false);
      setTimeRemaining(TIMER_MAP[desiredTimer]);
      setTimerComplete(false);
    };
    (0, _react.useEffect)(function () {
      var timer = setInterval(tick, 1000);
      return function () {
        return clearInterval(timer);
      };
    });
    (0, _react.useEffect)(function () {
      alarmPlaying ? audio.current.play() : audio.current.pause() && (audio.current.currentTime = 0);
    }, [alarmPlaying]);
    (0, _react.useEffect)(function () {
      document.title = ("").concat(defaultTitle, " - ").concat((0, _timer.translateFromSeconds)(timeRemaining));
      return function () {
        document.title = defaultTitle;
      };
    }, [timeRemaining]);
    return (
      /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(TimerHeader, null), /*#__PURE__*/_react["default"].createElement("hr", null), /*#__PURE__*/_react["default"].createElement(TimerBody, {
        timeRemaining: timeRemaining,
        setTimeRemaining: setTimeRemaining,
        isRunning: isRunning,
        toggleTimer: toggleTimer,
        selectedTimer: selectedTimer,
        resetTimer: resetTimer,
        timerComplete: timerComplete
      }))
    );
  }
  _s2(Timer, "lJNmukugmP8qU1YYEsq3D429tFM=");
  _c8 = Timer;
  var _default = Timer;
  exports["default"] = _default;
  var _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;
  $RefreshReg$(_c, "TimerHeader");
  $RefreshReg$(_c2, "TimerSelectorButton");
  $RefreshReg$(_c3, "TimerSelectorButtons");
  $RefreshReg$(_c4, "TimerSelectorSection");
  $RefreshReg$(_c5, "TimerDisplay");
  $RefreshReg$(_c6, "TimerManager");
  $RefreshReg$(_c7, "TimerBody");
  $RefreshReg$(_c8, "Timer");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
