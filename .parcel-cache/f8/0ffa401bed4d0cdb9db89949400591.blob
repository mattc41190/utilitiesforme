"use strict";
var helpers = require("../../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }
    return _typeof(obj);
  }
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require("react"));
  var _s2 = $RefreshSig$();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };
    return cache;
  }
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || (/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/).test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !((Symbol.iterator in Object(arr)))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
  var sendRequest = function sendRequest(_ref) {
    var fromCase = _ref.fromCase, toCase = _ref.toCase, contents = _ref.contents;
    var frontEndToBackendCasings = {
      'space-case': 'space_case',
      'camel-case': 'camel_case',
      'pascal-case': 'pascal_case',
      'kebab-case': 'kebab_case',
      'snake-case': 'snake_case'
    };
    fromCase = frontEndToBackendCasings[fromCase];
    toCase = frontEndToBackendCasings[toCase];
    var body = {
      contents: contents,
      from_case: fromCase,
      to_case: toCase
    };
    var args = {
      method: 'post',
      body: JSON.stringify(body),
      headers: {
        'Content-Type': 'application/json'
      }
    };
    var url = '/api/v1/case-transform';
    return window.fetch(url, args).then(function (res) {
      return res.json();
    });
  };
  var CaseTransformHeader = function CaseTransformHeader() {
    return (
      /*#__PURE__*/_react["default"].createElement("section", {
        className: "row mt-4"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "col"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "d-flex flex-column p-2 "
      }, /*#__PURE__*/_react["default"].createElement("h1", null, "Case Transform"), /*#__PURE__*/_react["default"].createElement("p", null, "The ", /*#__PURE__*/_react["default"].createElement("i", null, "Case Transform"), " utility allows you to transform code in one casing (camel, snake, etc...) to another case."))))
    );
  };
  _c = CaseTransformHeader;
  var CaseButton = function CaseButton(_ref2) {
    var value = _ref2.value, currentSelection = _ref2.currentSelection, content = _ref2.content, onClickHandler = _ref2.onClickHandler;
    var buttonClass = value === currentSelection ? 'success fw-bold' : 'secondary';
    return (
      /*#__PURE__*/_react["default"].createElement("button", {
        className: ("me-2 my-1 btn btn-").concat(buttonClass),
        type: "button",
        value: value,
        readOnly: true,
        onClick: onClickHandler
      }, content)
    );
  };
  _c2 = CaseButton;
  var ButtonSection = function ButtonSection(_ref3) {
    var title = _ref3.title, currentSelection = _ref3.currentSelection, handleChange = _ref3.handleChange;
    return (
      /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("h3", null, title), /*#__PURE__*/_react["default"].createElement(CaseButton, {
        value: "space-case",
        currentSelection: currentSelection,
        content: "Space Delimited 💫",
        onClickHandler: handleChange
      }), /*#__PURE__*/_react["default"].createElement(CaseButton, {
        value: "camel-case",
        currentSelection: currentSelection,
        content: "Camel Case 🐪",
        onClickHandler: handleChange
      }), /*#__PURE__*/_react["default"].createElement(CaseButton, {
        value: "snake-case",
        currentSelection: currentSelection,
        content: "Snake Case 🐍",
        onClickHandler: handleChange
      }), /*#__PURE__*/_react["default"].createElement(CaseButton, {
        value: "pascal-case",
        currentSelection: currentSelection,
        content: "Pascal Case 🧪",
        onClickHandler: handleChange
      }), /*#__PURE__*/_react["default"].createElement(CaseButton, {
        value: "kebab-case",
        currentSelection: currentSelection,
        content: "Kebab Case 🍢",
        onClickHandler: handleChange
      }))
    );
  };
  _c3 = ButtonSection;
  var CaseTransformBody = function CaseTransformBody(_ref4) {
    var contents = _ref4.contents, currentFromSelection = _ref4.currentFromSelection, currentToSelection = _ref4.currentToSelection, handleContentsChange = _ref4.handleContentsChange, handleFromChange = _ref4.handleFromChange, handleToChange = _ref4.handleToChange, handleSubmit = _ref4.handleSubmit;
    return (
      /*#__PURE__*/_react["default"].createElement("section", {
        className: "row my-4"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "col"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "d-flex flex-column p-2 text-center"
      }, /*#__PURE__*/_react["default"].createElement("h3", {
        className: "text-start"
      }, "Text To Transform"), /*#__PURE__*/_react["default"].createElement("textarea", {
        required: true,
        rows: "8",
        className: "form-control my-3",
        placeholder: "Contents here...",
        value: contents,
        onChange: handleContentsChange
      })), /*#__PURE__*/_react["default"].createElement("div", {
        className: "d-flex justify-content-between align-items-center p-2 my-4"
      }, /*#__PURE__*/_react["default"].createElement(ButtonSection, {
        title: "From",
        currentSelection: currentFromSelection,
        handleChange: handleFromChange
      }), /*#__PURE__*/_react["default"].createElement(ButtonSection, {
        title: "To",
        currentSelection: currentToSelection,
        handleChange: handleToChange
      })), /*#__PURE__*/_react["default"].createElement("div", {
        className: "p-2"
      }, /*#__PURE__*/_react["default"].createElement("button", {
        className: "btn btn-lg btn-success",
        onClick: handleSubmit
      }, "Submit"))))
    );
  };
  _c4 = CaseTransformBody;
  var CaseTransformResult = function CaseTransformResult(_ref5) {
    var result = _ref5.result, setResult = _ref5.setResult;
    return (
      /*#__PURE__*/_react["default"].createElement("section", null, /*#__PURE__*/_react["default"].createElement("div", {
        className: "d-flex flex-column p-2"
      }, /*#__PURE__*/_react["default"].createElement("h3", {
        className: "text-start"
      }, "Result"), /*#__PURE__*/_react["default"].createElement("textarea", {
        rows: "8",
        className: "form-control my-3",
        placeholder: "Results will go here...",
        value: result,
        onChange: function onChange(e) {
          return setResult(e.target.value);
        }
      })))
    );
  };
  _c5 = CaseTransformResult;
  function CaseTransform() {
    _s2();
    var _useState = (0, _react.useState)('Hello there'), _useState2 = _slicedToArray(_useState, 2), contents = _useState2[0], setContents = _useState2[1];
    var _useState3 = (0, _react.useState)('space-case'), _useState4 = _slicedToArray(_useState3, 2), fromCase = _useState4[0], setFromCase = _useState4[1];
    var _useState5 = (0, _react.useState)('space-case'), _useState6 = _slicedToArray(_useState5, 2), toCase = _useState6[0], setToCase = _useState6[1];
    var _useState7 = (0, _react.useState)('Hello there'), _useState8 = _slicedToArray(_useState7, 2), result = _useState8[0], setResult = _useState8[1];
    var handleContentsChange = function handleContentsChange(e) {
      return setContents(e.target.value);
    };
    var handleFromChange = function handleFromChange(e) {
      setFromCase(e.target.value);
    };
    var handleToChange = function handleToChange(e) {
      setToCase(e.target.value);
    };
    var handleSubmit = function handleSubmit(e) {
      sendRequest({
        fromCase: fromCase,
        toCase: toCase,
        contents: contents
      }).then(function (json) {
        setResult(json.data);
      })["catch"](function (e) {
        return console.error(e);
      });
    };
    return (
      /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(CaseTransformHeader, null), /*#__PURE__*/_react["default"].createElement("hr", null), /*#__PURE__*/_react["default"].createElement(CaseTransformBody, {
        contents: contents,
        currentFromSelection: fromCase,
        currentToSelection: toCase,
        handleContentsChange: handleContentsChange,
        handleFromChange: handleFromChange,
        handleToChange: handleToChange,
        handleSubmit: handleSubmit
      }), /*#__PURE__*/_react["default"].createElement(CaseTransformResult, {
        result: result,
        setResult: setResult
      }))
    );
  }
  _s2(CaseTransform, "f1HCU4Xrv0vc9FZugh6FEfNRv9w=");
  _c6 = CaseTransform;
  var _default = CaseTransform;
  exports["default"] = _default;
  var _c, _c2, _c3, _c4, _c5, _c6;
  $RefreshReg$(_c, "CaseTransformHeader");
  $RefreshReg$(_c2, "CaseButton");
  $RefreshReg$(_c3, "ButtonSection");
  $RefreshReg$(_c4, "CaseTransformBody");
  $RefreshReg$(_c5, "CaseTransformResult");
  $RefreshReg$(_c6, "CaseTransform");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
